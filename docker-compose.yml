version: '3'
services:
  portainer:
    container_name: portainer
    image: portainer/portainer:latest
    restart: unless-stopped
    ports: 
      - "9000:9000"
    environment:
      - VIRTUAL_HOST=portainer.local
    volumes:
      - ./portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock

  nginx-proxy:
    container_name: nginx-proxy
    image: jwilder/nginx-proxy:latest
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro

  homeassistant:
    container_name: home-assistant
    image: homeassistant/home-assistant:latest
    restart: unless-stopped
    ports: 
      - "8123:8123"
      - "8300:8300"
    environment:
      - VIRTUAL_HOST=hass.local
      - VIRTUAL_PORT=8123
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
      - ./homeassistant/config:/config

  rutorrent:
    container_name: rutorrent
    image: diameter/rtorrent-rutorrent:latest
    restart: unless-stopped
    ports: 
      - "8080:8080" 
      - "49160:49160/udp" 
      - "51413:51413"
    environment:
      - VIRTUAL_HOST=rutorrent.local
    volumes: 
      - ./downloads:/downloads 

  nfs:
    container_name: nfs
    image: itsthenetwork/nfs-server-alpine:latest
    restart: unless-stopped
    ports:
      - "2049:2049"
    environment:
      - SHARED_DIRECTORY=/downloads
    volumes:
      - ./downloads:/downloads
    privileged: true

  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr:latest
    restart: unless-stopped
    ports:
      - "8989:8989"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./downloads/tv:/tv
      - ./sonarrconfig:/config
      - ./downloads:/downloads
    environment:
      - VIRTUAL_HOST=sonarr.local
      - VIRTUAL_PORT=8989

  radarr:
    container_name: radarr
    image: linuxserver/radarr:latest
    restart: unless-stopped
    ports:
      - "7878:7878"
    environment:
      - VIRTUAL_HOST=radarr.local
    volumes:
      - /etc/localtime:/etc/localtime:ro 
      - ./downloads/movies:/movies
      - ./downloads:/downloads
      - ./radarrconfig:/config:rw

  prometheus:
    container_name: prometheus 
    image: prom/prometheus:latest
    restart: unless-stopped
    ports:
      - 9090:9090
    environment: 
      - VIRTUAL_HOST=prometheus.local
    volumes:
      - ./prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.retention=365d'
      - '--storage.tsdb.path=/etc/prometheus/tsdb'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  node-exporter:
    container_name: node-exporter
    image: prom/node-exporter:latest
    restart: unless-stopped
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    environment: 
      - VIRTUAL_HOST=exporter.local

  cadvisor:
    container_name: cadvisor
    image: google/cadvisor:latest
    restart: unless-stopped
    ports:
      - 8181:8080
    environment: 
      - VIRTUAL_HOST=cadvisor.local    
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment: 
      - VIRTUAL_HOST=grafana.local      
    volumes:
      - ./grafana:/var/lib/grafana